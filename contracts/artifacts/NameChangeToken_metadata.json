{
	"compiler": {
		"version": "0.7.0+commit.9e61f92b"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "INITIAL_ALLOTMENT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "PRE_REVEAL_MULTIPLIER",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "SECONDS_IN_A_DAY",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenIndex",
						"type": "uint256"
					}
				],
				"name": "accumulated",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "burnQuantity",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "tokenIndices",
						"type": "uint256[]"
					}
				],
				"name": "claim",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "emissionEnd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "emissionPerDay",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "emissionStart",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenIndex",
						"type": "uint256"
					}
				],
				"name": "lastClaim",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "masksAddress",
						"type": "address"
					}
				],
				"name": "setMasksAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Extends standard ERC20 contract",
			"kind": "dev",
			"methods": {
				"accumulated(uint256)": {
					"details": "Accumulated NCT tokens for a Hashmask token index."
				},
				"allowance(address,address)": {
					"details": "See {IERC20-allowance}."
				},
				"approve(address,uint256)": {
					"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
				},
				"balanceOf(address)": {
					"details": "See {IERC20-balanceOf}."
				},
				"burn(uint256)": {
					"details": "Burns a quantity of tokens held by the caller. Emits an {Transfer} event to 0 address"
				},
				"claim(uint256[])": {
					"details": "Claim mints NCTs and supports multiple Hashmask token indices at once."
				},
				"constructor": {
					"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. Also initalizes {emissionStart} To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
				},
				"decimals()": {
					"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
				},
				"increaseAllowance(address,uint256)": {
					"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
				},
				"lastClaim(uint256)": {
					"details": "When accumulated NCTs have last been claimed for a Hashmask index"
				},
				"name()": {
					"details": "Returns the name of the token."
				},
				"setMasksAddress(address)": {
					"details": "Permissioning not added because it is only callable once. It is set right after deployment and verified."
				},
				"symbol()": {
					"details": "Returns the symbol of the token, usually a shorter version of the name."
				},
				"totalSupply()": {
					"details": "See {IERC20-totalSupply}."
				},
				"transfer(address,uint256)": {
					"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "NameChangeToken Contract (The native token of Hashmasks)",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/NameChangeToken.sol": "NameChangeToken"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/ERC165/IERC165.sol": {
			"keccak256": "0xeff84c6b6254ef37df4b6ca227c15e4b356932a99276022e10c3fdea01901b68",
			"urls": [
				"bzz-raw://ea8439cdb509552679ac8a673f5ac6e5b299672a5f7188823effa131afd2afe0",
				"dweb:/ipfs/QmbRLt4atobWfzyTx5UXTQduQer2rDGFz3BHmg73PSRrxB"
			]
		},
		"contracts/IERC20.sol": {
			"keccak256": "0x6cd9e212857e4c104eca8b6265fb6cc365f05ed3905f2ab7f1bd443519d7df8d",
			"urls": [
				"bzz-raw://cca1f551a89219a9b1c57491c2fa842d8eedaf104c7ea84b4a2beddd98509988",
				"dweb:/ipfs/Qmf4B4PCSW5kzD7JMFZf5rut7Sj4J1NQ1oMCkDrTiccijT"
			]
		},
		"contracts/IERC721.sol": {
			"keccak256": "0xb05b9f7d762ad61d200031c618810641f19b07e45551588dc85f36509ca2fb01",
			"urls": [
				"bzz-raw://11e4722d5b6caff2376a14629557592e8bc53adbda530882097a4f972df3b984",
				"dweb:/ipfs/QmephVYKN1qSWogM7dVhDftWLVeDbyJvMfwCsAF9Q1t4uP"
			]
		},
		"contracts/IERC721Enumerable.sol": {
			"keccak256": "0x1827f38d7d2c64b986f99037546e8d00722cfe50bbffe4ffe9f94ec5f6230e1d",
			"urls": [
				"bzz-raw://586a89251195a4148289522ff228393f5f47d674276e29265a0da8e5f4987a49",
				"dweb:/ipfs/QmRYvVYPYc5Qav73XfU6ViNppvUyHcimXgYH9kkwCFyaiQ"
			]
		},
		"contracts/IMasks.sol": {
			"keccak256": "0x525bae9356db6b51d2f8c50cde76b54969b451ceac1a78a2e785d57620ee6878",
			"urls": [
				"bzz-raw://aea4b170d1d9b8835fdd363a1886e3d1b3883804541782e375ce03bdf6b57edb",
				"dweb:/ipfs/QmSzCyjUfqWFy8j8A4yFgTCrzpBT7niGnpu5Tp3WAd7xDc"
			]
		},
		"contracts/NameChangeToken.sol": {
			"keccak256": "0x25a31f2305fb9518465c7e29399fc2645818b38706fb80cf3d41ecd2e022488d",
			"urls": [
				"bzz-raw://3aea452485fee788cd7afaa82e41d7696694f35a54d5f86640c6bbc0062be3fb",
				"dweb:/ipfs/QmQ4ozSXBzdFBjC9SSWvNj287mwCLBF1jL3w7j5WWabA3R"
			]
		},
		"contracts/utils/Context.sol": {
			"keccak256": "0xf1776fe723e702674ae392573d22aa0cfa01444d76037007ca33ad41f413b0b1",
			"urls": [
				"bzz-raw://e826978873ff01700d1d7ec5a77bf6b1b0be472574ce294fcbff154e435df2f5",
				"dweb:/ipfs/QmWJNFtriLMGK2dQxkHYrESD3cVZqyS8HZJesWyYFHGAsQ"
			]
		},
		"contracts/utils/SafeMath.sol": {
			"keccak256": "0x6e24c0adb9fa6faa71ced83f47e0057d8cc882e9d1186253cc97c5f7693984d3",
			"urls": [
				"bzz-raw://2a0823c376429482f9865ce9a332fd7cfc8c22bdd7c236d137252934bd27a966",
				"dweb:/ipfs/QmXvcZnep2XvBHWXirMhj1bGfz4fxNd5Wjeosmh1mTzAW6"
			]
		}
	},
	"version": 1
}