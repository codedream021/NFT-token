{
	"compiler": {
		"version": "0.7.0+commit.9e61f92b"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "nctAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "approved",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "maskIndex",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "newName",
						"type": "string"
					}
				],
				"name": "NameChange",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "MAX_NFT_SUPPLY",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "NAME_CHANGE_PRICE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "REVEAL_TIMESTAMP",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "SALE_START_TIMESTAMP",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "canwestart",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "newName",
						"type": "string"
					}
				],
				"name": "changeName",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "finalizeStartingIndex",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getApproved",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNFTPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "isMintedBeforeReveal",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "nameString",
						"type": "string"
					}
				],
				"name": "isNameReserved",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "numberOfNfts",
						"type": "uint256"
					}
				],
				"name": "mintNFT",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "ownerOf",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "startvar",
						"type": "bool"
					}
				],
				"name": "start",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startingIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startingIndexBlock",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "str",
						"type": "string"
					}
				],
				"name": "toLower",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "tokenByIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "tokenNameByIndex",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "tokenOfOwnerByIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "str",
						"type": "string"
					}
				],
				"name": "validateName",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Extends ERC721 Non-Fungible Token Standard basic implementation",
			"kind": "dev",
			"methods": {
				"approve(address,uint256)": {
					"details": "See {IERC721-approve}."
				},
				"balanceOf(address)": {
					"details": "See {IERC721-balanceOf}."
				},
				"changeName(uint256,string)": {
					"details": "Changes the name for Hashmask tokenId"
				},
				"constructor": {
					"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
				},
				"finalizeStartingIndex()": {
					"details": "Finalize starting index"
				},
				"getApproved(uint256)": {
					"details": "See {IERC721-getApproved}."
				},
				"getNFTPrice()": {
					"details": "Gets current Hashmask Price"
				},
				"isApprovedForAll(address,address)": {
					"details": "See {IERC721-isApprovedForAll}."
				},
				"isMintedBeforeReveal(uint256)": {
					"details": "Returns if the NFT has been minted before reveal phase"
				},
				"isNameReserved(string)": {
					"details": "Returns if the name has been reserved."
				},
				"mintNFT(uint256)": {
					"details": "Mints Masks"
				},
				"name()": {
					"details": "See {IERC721Metadata-name}."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"ownerOf(uint256)": {
					"details": "See {IERC721-ownerOf}."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"safeTransferFrom(address,address,uint256)": {
					"details": "See {IERC721-safeTransferFrom}."
				},
				"safeTransferFrom(address,address,uint256,bytes)": {
					"details": "See {IERC721-safeTransferFrom}."
				},
				"setApprovalForAll(address,bool)": {
					"details": "See {IERC721-setApprovalForAll}."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
				},
				"symbol()": {
					"details": "See {IERC721Metadata-symbol}."
				},
				"toLower(string)": {
					"details": "Converts the string to lowercase"
				},
				"tokenByIndex(uint256)": {
					"details": "See {IERC721Enumerable-tokenByIndex}."
				},
				"tokenNameByIndex(uint256)": {
					"details": "Returns name of the NFT at index."
				},
				"tokenOfOwnerByIndex(address,uint256)": {
					"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
				},
				"totalSupply()": {
					"details": "See {IERC721Enumerable-totalSupply}."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC721-transferFrom}."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"validateName(string)": {
					"details": "Check if the name string is valid (Alphanumeric and spaces without leading or trailing space)"
				},
				"withdraw()": {
					"details": "Withdraw ether from this contract (Callable by owner)"
				}
			},
			"title": "Hashmasks contract",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Masks.sol": "Masks"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/ERC165/ERC165.sol": {
			"keccak256": "0x4be352242e88fff80fe47faa567af3af5109671c74d6aae69494bd2cde5c2fea",
			"urls": [
				"bzz-raw://d34b015a422fc346fe56828615b6bc3433c43767204500e892967de6afa486a6",
				"dweb:/ipfs/QmNbtGQzjvY1aQmsuRT8Q9dbQLgtdH59BzcEeMbU1MUqvC"
			]
		},
		"contracts/ERC165/IERC165.sol": {
			"keccak256": "0xeff84c6b6254ef37df4b6ca227c15e4b356932a99276022e10c3fdea01901b68",
			"urls": [
				"bzz-raw://ea8439cdb509552679ac8a673f5ac6e5b299672a5f7188823effa131afd2afe0",
				"dweb:/ipfs/QmbRLt4atobWfzyTx5UXTQduQer2rDGFz3BHmg73PSRrxB"
			]
		},
		"contracts/IERC20.sol": {
			"keccak256": "0x6cd9e212857e4c104eca8b6265fb6cc365f05ed3905f2ab7f1bd443519d7df8d",
			"urls": [
				"bzz-raw://cca1f551a89219a9b1c57491c2fa842d8eedaf104c7ea84b4a2beddd98509988",
				"dweb:/ipfs/Qmf4B4PCSW5kzD7JMFZf5rut7Sj4J1NQ1oMCkDrTiccijT"
			]
		},
		"contracts/IERC721.sol": {
			"keccak256": "0xb05b9f7d762ad61d200031c618810641f19b07e45551588dc85f36509ca2fb01",
			"urls": [
				"bzz-raw://11e4722d5b6caff2376a14629557592e8bc53adbda530882097a4f972df3b984",
				"dweb:/ipfs/QmephVYKN1qSWogM7dVhDftWLVeDbyJvMfwCsAF9Q1t4uP"
			]
		},
		"contracts/IERC721Enumerable.sol": {
			"keccak256": "0x1827f38d7d2c64b986f99037546e8d00722cfe50bbffe4ffe9f94ec5f6230e1d",
			"urls": [
				"bzz-raw://586a89251195a4148289522ff228393f5f47d674276e29265a0da8e5f4987a49",
				"dweb:/ipfs/QmRYvVYPYc5Qav73XfU6ViNppvUyHcimXgYH9kkwCFyaiQ"
			]
		},
		"contracts/IMasks.sol": {
			"keccak256": "0x525bae9356db6b51d2f8c50cde76b54969b451ceac1a78a2e785d57620ee6878",
			"urls": [
				"bzz-raw://aea4b170d1d9b8835fdd363a1886e3d1b3883804541782e375ce03bdf6b57edb",
				"dweb:/ipfs/QmSzCyjUfqWFy8j8A4yFgTCrzpBT7niGnpu5Tp3WAd7xDc"
			]
		},
		"contracts/Masks.sol": {
			"keccak256": "0xa6c2bf6b69e2d502affefc6e7b204d9782bafd5962d9ea7866aa434c1f98042f",
			"urls": [
				"bzz-raw://0c211474bb647880d17ecb0bdda45f04a530dab3f0b1fbac8d0ddd490e084b98",
				"dweb:/ipfs/QmbUad8fFDwU4MaPG57WjNVh1R9tLJ7M4m5RYM8iRmNPrJ"
			]
		},
		"contracts/utils/Address.sol": {
			"keccak256": "0xffedbfab4016abf547499dea4459ca10fb8d1f214b15b3820fab2c168fc9fe1b",
			"urls": [
				"bzz-raw://c00f092af4054e422873141642ccb30130afe182f9108658bec4705097add9ba",
				"dweb:/ipfs/QmUNHJ9RZohenUX4ncPFc57YtFLERETC12afkBZa5rF3Co"
			]
		},
		"contracts/utils/Context.sol": {
			"keccak256": "0xf1776fe723e702674ae392573d22aa0cfa01444d76037007ca33ad41f413b0b1",
			"urls": [
				"bzz-raw://e826978873ff01700d1d7ec5a77bf6b1b0be472574ce294fcbff154e435df2f5",
				"dweb:/ipfs/QmWJNFtriLMGK2dQxkHYrESD3cVZqyS8HZJesWyYFHGAsQ"
			]
		},
		"contracts/utils/EnumerableMap.sol": {
			"keccak256": "0xdcdc735b7e79a71be3e3813f35b39014d722fb29c7c86b5ff608056f66341453",
			"urls": [
				"bzz-raw://b93010543cad2ea17d93d06c4127021fc2f3204c9973cd0c1d5f953e9d4b6358",
				"dweb:/ipfs/QmStDdAq2dC9G48vTAZqHdh843RS9BZ2CCcP1a7TGAfVCc"
			]
		},
		"contracts/utils/EnumerableSet.sol": {
			"keccak256": "0xce584f30b78de91e5e2f31d900f838f7190b85a9dea1ecd1be1f43fa97a6e4df",
			"urls": [
				"bzz-raw://0f959912e7eb4af339f086b6ff4067b3db2ad3299e7f89a21e159ba2e563a37e",
				"dweb:/ipfs/QmQDJW5eVXqV6HEbSNdQky2DuWC7DsQHQE9oYiBXtqcVqy"
			]
		},
		"contracts/utils/Ownable.sol": {
			"keccak256": "0xd4fa0256e458c9707324bbebb7a9ef9641c3cc61ab1356b31dcc8d81f8e916c7",
			"urls": [
				"bzz-raw://1bdc37a3abe02366b0ec67f453fdbee8301f99ce54fc105962a7ff458371b916",
				"dweb:/ipfs/QmYQmeuFCSgDVH1tZSiECSy1HGqSa1QwQV2uDQH8FLJRXZ"
			]
		},
		"contracts/utils/SafeMath.sol": {
			"keccak256": "0x6e24c0adb9fa6faa71ced83f47e0057d8cc882e9d1186253cc97c5f7693984d3",
			"urls": [
				"bzz-raw://2a0823c376429482f9865ce9a332fd7cfc8c22bdd7c236d137252934bd27a966",
				"dweb:/ipfs/QmXvcZnep2XvBHWXirMhj1bGfz4fxNd5Wjeosmh1mTzAW6"
			]
		},
		"contracts/utils/Strings.sol": {
			"keccak256": "0xd7312b18cf1203096ba1ebf5bc4631c5dc5316993cf08d9caf21efbf2c25b64d",
			"urls": [
				"bzz-raw://06a84bf2da8be63d9aa02c39e569b4ca5e5aef79d5237a3076c4406771d24193",
				"dweb:/ipfs/QmXUZnRLZe344fAoRHgCjLznatvKrjJ5fbpfEZfsiNwrVw"
			]
		}
	},
	"version": 1
}